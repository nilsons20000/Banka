package Admin;
import SuperAdmin.Super_Admin;
import Vesture.Vesture_Frame;
import User.User;
import LogIN.LogIN;
import Konti.Konti_Admin_Show_Frame;
import Konti.Kredita_Uzkrajuma_Algas_ADD;
import Checks.checks;
import SuperAdmin.SuperAdmin;
import DBconnect.DBConnect;
import java.security.NoSuchAlgorithmException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Nils
 */
public final class Admin_panel extends javax.swing.JFrame {
    Connection con;
    Statement st;
    ResultSet rs;
    DBConnect connect = new DBConnect();
    
    /*jTextField1.setVisible(false);*/
     public Admin_panel() {
        initComponents();
    }
     
      public Admin_panel(int ID,String admin) {
        initComponents();
        Show_Users_IN_JTable();
        id(ID,admin); 
    }
    public void id(int ID,String admin){
            String temp=Integer.toString(ID);
            jTextField1.setText(temp);
            jTextField2.setText(admin);
    }

    
    public void Show_Users_IN_JTable(){
        ArrayList<User> list = getusersList();
        DefaultTableModel model= (DefaultTableModel)jTable_Display_User.getModel();
        Object[] row=new Object[5];

        for (int i=0;i<list.size();i++){
            row[0]=list.get(i).getID();
            row[1]=list.get(i).getFirstName();
            row[2]=list.get(i).getLastName();
            row[3]=list.get(i).getEmail();
            row[4]=list.get(i).getPassword();

           model.addRow(row);
          }
    } 
   public ArrayList<User> getusersList(){
        ArrayList<User> usersList=new ArrayList<>();
        connect.DBConnect();
        
        String query="Select *From `clients`";
               
        try{
            con = DriverManager.getConnection("jdbc:mysql://localhost/Users?serverTimezone=Europe/Riga&useSSL=false","root","");
            st=con.createStatement();
            rs = st.executeQuery(query);
            User user;
            while(rs.next()){
                 user=new User(rs.getInt("id"),rs.getString("firstName"),rs.getString("lastName"),rs.getString("email"),rs.getString("password"));
                 usersList.add(user);
            }  
            con.close();
            st.close();
            rs.close();
        }catch (Exception ex){
            ex.printStackTrace();
        }
        return usersList;
    }
    public void executeSQLQuery(String query, String message){
        DBConnect connect = new DBConnect();
         connect.DBConnect();
        try{
           con = DriverManager.getConnection("jdbc:mysql://localhost/Users?serverTimezone=Europe/Riga&useSSL=false","root","");
           st=con.createStatement();
           if(st.executeUpdate(query)==1){
               DefaultTableModel model=(DefaultTableModel)jTable_Display_User.getModel();
               model.setRowCount(0);
               Show_Users_IN_JTable();

               JOptionPane.showMessageDialog(null,"Data "+message+"Succefully");
           }else{
               JOptionPane.showMessageDialog(null,"Data NOT "+message);
           } 
           con.close();
           st.close();
           rs.close();
        }catch(Exception ex){
             ex.printStackTrace();
        }
    }
    public void executeSQLQuery2(String query){
        DBConnect connect = new DBConnect();
         connect.DBConnect();
        try{
           con = DriverManager.getConnection("jdbc:mysql://localhost/Konti?serverTimezone=Europe/Riga&useSSL=false","root","");
           st=con.createStatement();
           if(st.executeUpdate(query)==1){  

           }else{

           } 
           con.close();
            st.close();
           
        }catch(Exception ex){
             ex.printStackTrace();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField_ID = new javax.swing.JTextField();
        jTextField_Vards = new javax.swing.JTextField();
        jTextField_Uzvards = new javax.swing.JTextField();
        jTextField_Epasts = new javax.swing.JTextField();
        jTextField_Parole = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_Display_User = new javax.swing.JTable();
        jButton_Insert = new javax.swing.JButton();
        jButton_Update = new javax.swing.JButton();
        jButton_Delete = new javax.swing.JButton();
        jButton_Uzkrajuma_konts = new javax.swing.JButton();
        Kredita_Konts = new javax.swing.JButton();
        jButton_Clear = new javax.swing.JButton();
        jTextField_oldPass = new javax.swing.JTextField();
        Konti = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        Kredita_Summa = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setBackground(new java.awt.Color(204, 255, 204));
        jLabel1.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setText("ID");

        jLabel2.setBackground(new java.awt.Color(204, 255, 204));
        jLabel2.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 102));
        jLabel2.setText("Vards");

        jLabel3.setBackground(new java.awt.Color(204, 255, 204));
        jLabel3.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 102));
        jLabel3.setText("Uzvards");

        jLabel4.setBackground(new java.awt.Color(204, 255, 204));
        jLabel4.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 102));
        jLabel4.setText("E-pasts");

        jLabel5.setBackground(new java.awt.Color(204, 255, 204));
        jLabel5.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 102, 102));
        jLabel5.setText("Parole");

        jTextField_ID.setEditable(false);
        jTextField_ID.setBackground(new java.awt.Color(204, 255, 204));
        jTextField_ID.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jTextField_ID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_IDActionPerformed(evt);
            }
        });

        jTextField_Vards.setBackground(new java.awt.Color(204, 255, 204));
        jTextField_Vards.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N

        jTextField_Uzvards.setBackground(new java.awt.Color(204, 255, 204));
        jTextField_Uzvards.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N

        jTextField_Epasts.setBackground(new java.awt.Color(204, 255, 204));
        jTextField_Epasts.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N

        jTextField_Parole.setBackground(new java.awt.Color(204, 255, 204));
        jTextField_Parole.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N

        jScrollPane1.setBackground(new java.awt.Color(0, 255, 102));
        jScrollPane1.setForeground(new java.awt.Color(51, 51, 51));

        jTable_Display_User.setBackground(new java.awt.Color(153, 255, 204));
        jTable_Display_User.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Vards", "Uzvards", "E-pasts", "Parole"
            }
        ));
        jTable_Display_User.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_Display_UserMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_Display_User);
        if (jTable_Display_User.getColumnModel().getColumnCount() > 0) {
            jTable_Display_User.getColumnModel().getColumn(1).setHeaderValue("Vards");
            jTable_Display_User.getColumnModel().getColumn(2).setHeaderValue("Uzvards");
            jTable_Display_User.getColumnModel().getColumn(3).setHeaderValue("E-pasts");
            jTable_Display_User.getColumnModel().getColumn(4).setHeaderValue("Parole");
        }

        jButton_Insert.setBackground(new java.awt.Color(0, 255, 102));
        jButton_Insert.setForeground(new java.awt.Color(51, 51, 51));
        jButton_Insert.setText("Insert");
        jButton_Insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_InsertActionPerformed(evt);
            }
        });

        jButton_Update.setBackground(new java.awt.Color(0, 255, 102));
        jButton_Update.setForeground(new java.awt.Color(51, 51, 51));
        jButton_Update.setText("Update");
        jButton_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_UpdateActionPerformed(evt);
            }
        });

        jButton_Delete.setBackground(new java.awt.Color(0, 255, 102));
        jButton_Delete.setForeground(new java.awt.Color(51, 51, 51));
        jButton_Delete.setText("Delete");
        jButton_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_DeleteActionPerformed(evt);
            }
        });

        jButton_Uzkrajuma_konts.setBackground(new java.awt.Color(0, 255, 102));
        jButton_Uzkrajuma_konts.setForeground(new java.awt.Color(51, 51, 51));
        jButton_Uzkrajuma_konts.setText("Pievienot Uzkrajuma kontu");
        jButton_Uzkrajuma_konts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Uzkrajuma_kontsActionPerformed(evt);
            }
        });

        Kredita_Konts.setBackground(new java.awt.Color(0, 255, 102));
        Kredita_Konts.setForeground(new java.awt.Color(51, 51, 51));
        Kredita_Konts.setText("Pievienot Kredita Kontu");
        Kredita_Konts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Kredita_KontsActionPerformed(evt);
            }
        });

        jButton_Clear.setBackground(new java.awt.Color(0, 255, 102));
        jButton_Clear.setForeground(new java.awt.Color(51, 51, 51));
        jButton_Clear.setText("Iztīrīt");
        jButton_Clear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_ClearMouseClicked(evt);
            }
        });
        jButton_Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ClearActionPerformed(evt);
            }
        });

        jTextField_oldPass.setEditable(false);
        jTextField_oldPass.setBackground(new java.awt.Color(240, 240, 240));
        jTextField_oldPass.setForeground(new java.awt.Color(51, 51, 51));

        Konti.setText("Apskatit kontus");
        Konti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KontiActionPerformed(evt);
            }
        });

        jButton1.setText("Atpakaļ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField1.setEditable(false);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton2.setText("Apskatit vesturi");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextField2.setEditable(false);
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField_ID)
                                    .addComponent(jTextField_Vards)
                                    .addComponent(jTextField_Uzvards)
                                    .addComponent(jTextField_Epasts)
                                    .addComponent(jTextField_Parole)
                                    .addComponent(jTextField_oldPass, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Kredita_Konts, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton_Insert, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton_Update)))
                                .addGap(18, 18, 18)
                                .addComponent(jButton_Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Kredita_Summa, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton_Uzkrajuma_konts, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(67, 67, 67)
                        .addComponent(jButton_Clear, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(Konti, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                            .addComponent(jTextField2))
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 558, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_ID, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField_Vards, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jTextField_Uzvards, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(jLabel4))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField_Epasts, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jTextField_Parole, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField_oldPass, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                            .addComponent(jButton_Update, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton_Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton_Insert, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton_Clear, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton_Uzkrajuma_konts, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Konti, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(45, 45, 45))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Kredita_Summa, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Kredita_Konts, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(39, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField_IDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_IDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_IDActionPerformed

    private void jButton_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_UpdateActionPerformed
         Admin update=new Admin();  
         checks checks=new checks();
        try {
            String name_INPUT=jTextField_Vards.getText();
            String lastName_INPUT=jTextField_Uzvards.getText();
            String password_INPUT=jTextField_Parole.getText();
            String email_INPUT=jTextField_Epasts.getText();
            String old_pass= jTextField_oldPass.getText();
            String ID=jTextField1.getText();

                  if(!checks.checkField(name_INPUT) || !checks.checkField(lastName_INPUT) || !checks.isValidword(name_INPUT) || !checks.isValidword(lastName_INPUT)|| !checks.isValidEmail(email_INPUT) ){
                    if(!checks.isValidword(name_INPUT))
                        JOptionPane.showMessageDialog(null,"Incorrect characters contained in NAME");
                    if(!checks.isValidword(lastName_INPUT))
                        JOptionPane.showMessageDialog(null,"Incorrect characters contained  in LAST NAME");
                    if(!checks.checkField(name_INPUT))
                        JOptionPane.showMessageDialog(null,"Name is empty");
                    if(!checks.checkField(lastName_INPUT))
                        JOptionPane.showMessageDialog(null,"Last Name is empty"); 
                        String nosaukums="clients";
                        String check_name="email";
                    if (checks.hasField(email_INPUT,nosaukums,check_name))
                        JOptionPane.showMessageDialog(null,"Tads epasts jau eksiste");
                    if(!checks.isValidEmail(email_INPUT))
                        JOptionPane.showMessageDialog(null,"Email error");   
                    if(!checks.passwordCHECK(password_INPUT))
                        JOptionPane.showMessageDialog(null,"Password must NOT BE LESS than 8 characters");
                }else {
                    if(!checks.passwordCHECK(password_INPUT,old_pass)){
                        name_INPUT=jTextField_Vards.getText();
                        lastName_INPUT=jTextField_Uzvards.getText();
                        email_INPUT=jTextField_Epasts.getText();

                        name_INPUT=checks.firstUpperCase(name_INPUT);
                        lastName_INPUT=checks.firstUpperCase(lastName_INPUT);

                        String query = "UPDATE `clients` SET `firstName`='"+name_INPUT+"',`lastName`='"+lastName_INPUT+"',`email`='"+email_INPUT+"' WHERE id = "+jTextField_ID.getText();
                        executeSQLQuery(query,"Updated");
                    }else{
                       if (password_INPUT.length()<8 || password_INPUT.length()>20){JOptionPane.showMessageDialog(null,"Pass error");}
                        else{
                            name_INPUT=jTextField_Vards.getText();
                            lastName_INPUT=jTextField_Uzvards.getText();
                            email_INPUT=jTextField_Epasts.getText();
                            String Password=checks.passwordMD(password_INPUT);

                            String name="clients";
                            String query = update.Update_Users(name,name_INPUT, lastName_INPUT, email_INPUT, Password, ID);
                            executeSQLQuery(query,"Updated");
                            
                            String text="Lietotajs ar ID"+ID+"izlaboja info lietotaju:"+ID;
                    
                   
                            String queryy=update.LOG(ID,text);
                            executeSQLQuery2(queryy);
                            
                            }
                        }
                    }
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(Admin_panel.class.getName()).log(Level.SEVERE, null, ex);
        }
        jTextField_ID.setText("");
        jTextField_Vards.setText("");
        jTextField_Uzvards.setText("");
        jTextField_Epasts.setText("");
        jTextField_Parole.setText("");
        jTextField_oldPass.setText("");
    }//GEN-LAST:event_jButton_UpdateActionPerformed
                       
    private void jButton_InsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_InsertActionPerformed
        try {
            checks checks=new checks();
            Admin addd=new Admin();
            Kredita_Uzkrajuma_Algas_ADD add=new Kredita_Uzkrajuma_Algas_ADD();
            SuperAdmin ad=new SuperAdmin();
            String name_INPUT=jTextField_Vards.getText();
            String lastName_INPUT=jTextField_Uzvards.getText();
            String password_INPUT=jTextField_Parole.getText();
            String email_INPUT=jTextField_Epasts.getText();
            String ID=jTextField1.getText();
            
            if(!checks.checkField(name_INPUT) || !checks.checkField(lastName_INPUT) || !checks.isValidword(name_INPUT) || !checks.isValidword(lastName_INPUT)|| !checks.isValidEmail(email_INPUT) || !checks.passwordCHECK(password_INPUT)){
                if(!checks.checkField(name_INPUT))
                    JOptionPane.showMessageDialog(null,"Name is empty");
                if(!checks.checkField(lastName_INPUT))
                    JOptionPane.showMessageDialog(null,"Last Name is empty");
                        else{
                            if(!checks.isValidword(name_INPUT))
                                JOptionPane.showMessageDialog(null,"Incorrect characters contained in NAME");
                            if(!checks.isValidword(lastName_INPUT))
                                 JOptionPane.showMessageDialog(null,"Incorrect characters contained  in LAST NAME");
                           }   
                String nosaukums="clients";
                String check_name="email";
                
                String nosaukums2="admin";
                String check_name2="email";
                if (checks.hasField(email_INPUT,nosaukums,check_name) || checks.hasField(email_INPUT,nosaukums2,check_name2))
                    JOptionPane.showMessageDialog(null,"Tads epasts jau eksiste");
                if(!checks.isValidEmail(email_INPUT))
                    JOptionPane.showMessageDialog(null,"Email error");   
                if(!checks.passwordCHECK(password_INPUT))
                    JOptionPane.showMessageDialog(null,"Password must NOT BE LESS than 8 characters");
            }else {
                        name_INPUT=checks.firstUpperCase(name_INPUT);
                        lastName_INPUT=checks.firstUpperCase(lastName_INPUT);
                        String Password=checks.passwordMD(password_INPUT);

                        String name="clients";
                        String query=addd.Insert_USERS(name,name_INPUT, lastName_INPUT, email_INPUT, Password);
                        executeSQLQuery(query,"Inserted");

                        String text="Lietotajs ar ID"+ID+" pievienoja lietotaju:"+name_INPUT+" "+lastName_INPUT;
                        String queryy=addd.LOG(ID,text);
                        executeSQLQuery2(queryy);


                        String quer="Select *From `clients` WHERE email='"+email_INPUT+"'";

                        try{
                          con = DriverManager.getConnection("jdbc:mysql://localhost/Users?serverTimezone=Europe/Riga&useSSL=false","root","");
                          st=con.createStatement();
                          rs = st.executeQuery(quer);
                          if(rs.next()){
                                double IDD=rs.getInt("id");

                                String IDDD= Double.toString(IDD);
                                long a=1000000000000L;
                                long b=10000000000000L;
                                boolean temp=true;
                                int Balance=0;
                                do{
                                        int first_number=1 + (int) (Math.random() * 100);
                                        long second_number= a + (long) (Math.random() * b);

                                        String Konta_numurs="LV"+first_number+"HABA"+second_number;
                                        String Konti_Uzkrajumi="konti.uzkrajuma";
                                        String Konti_Kredita="konti.kredita";
                                        String Konti_Algas="konti.algas";
                                        String Konti_Bankas_konts="konti.Bankas_konts";
                                        String check_name="Konta_numurs";

                                               if(!checks.hasField(Konta_numurs,Konti_Uzkrajumi,check_name) &&  !checks.hasField(Konta_numurs,Konti_Kredita,check_name) && !checks.hasField(Konta_numurs,Konti_Algas,check_name) && !checks.hasField(Konta_numurs,Konti_Bankas_konts,check_name)){
                                                String namee = "konti.algas";
                                                String konta_name="Algas";
                                                String queryyy=add.Insert_Kont(konta_name,namee,IDDD, Konta_numurs, Balance);
                                                executeSQLQuery(queryyy,"Inserted");

                                                String textt="Lietotajs ar ID"+ID+" pievienoja Algas kontu:"+Konta_numurs;
                                                String queryyyy=ad.LOG(ID,textt);
                                                executeSQLQuery2(queryyyy);
                                                temp=false;
                                           }else{

                                        }
                                    }while(temp);
                           }
                      }catch (Exception ex){
                              ex.printStackTrace();
                          }
                   }
            } catch (NoSuchAlgorithmException ex) {
                Logger.getLogger(Admin_panel.class.getName()).log(Level.SEVERE, null, ex);
                }
        jTextField_ID.setText("");
        jTextField_Vards.setText("");
        jTextField_Uzvards.setText("");
        jTextField_Epasts.setText("");
        jTextField_Parole.setText("");
        jTextField_oldPass.setText("");
    }//GEN-LAST:event_jButton_InsertActionPerformed

    private void jButton_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_DeleteActionPerformed
        Admin delete=new Admin();
        
        String temp=jTextField_ID.getText();
        int ID=Integer.parseInt(temp);
        
        String name="clients";
        String query=delete.Delete_Users(name,temp);
        executeSQLQuery(query,"Deleted");
        
        String kredita_nos="kredita";
        String queryy=delete.Delete_Users_Konti(kredita_nos, ID);
        executeSQLQuery2(queryy);
 
        String uzkrajuma_nos="uzkrajuma";
        String queryyy=delete.Delete_Users_Konti(uzkrajuma_nos, ID);
        executeSQLQuery2(queryyy);
        
        String algas_nos="algas";
        String queryyyy=delete.Delete_Users_Konti(algas_nos, ID);
        executeSQLQuery2(queryyyy);
        
        String text="Lietotajs ar ID"+ID+"nodzesa lietotaju:"+ID;
        String queryi=delete.LOG(temp,text);
        executeSQLQuery2(queryi);
        
        jTextField_ID.setText("");
        jTextField_Vards.setText("");
        jTextField_Uzvards.setText("");
        jTextField_Epasts.setText("");
        jTextField_Parole.setText("");
        jTextField_oldPass.setText("");
    }//GEN-LAST:event_jButton_DeleteActionPerformed

    private void jButton_Uzkrajuma_kontsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Uzkrajuma_kontsActionPerformed
        checks add=new checks();  
        Admin ad=new Admin();
        Kredita_Uzkrajuma_Algas_ADD addd=new Kredita_Uzkrajuma_Algas_ADD();
        String ID=jTextField_ID.getText();
        long a=1000000000000L;
        long b=10000000000000L;
        boolean temp=true;
        do{
            int first_number=1 + (int) (Math.random() * 100);
            long second_number= a + (long) (Math.random() * b);
            int Balance=0;
            
            String Konta_numurs="LV"+first_number+"HABA"+second_number;
            String Konti_Uzkrajumi="konti.uzkrajuma";
            String Konti_Kredita="konti.kredita";
            String Konti_Algas="konti.algas";
            String Konti_Bankas_konts="konti.Bankas_konts";
            String check_name="Konta_numurs";
            
                   if(!add.hasField(Konta_numurs,Konti_Uzkrajumi,check_name) &&  !add.hasField(Konta_numurs,Konti_Kredita,check_name) && !add.hasField(Konta_numurs,Konti_Algas,check_name) && !add.hasField(Konta_numurs,Konti_Bankas_konts,check_name)){
                    String name = "konti.uzkrajuma";
                    String konta_name="Uzkrajuma";
                    String query=addd.Insert_Kont(konta_name,name,ID, Konta_numurs, Balance);
                    executeSQLQuery(query,"Inserted");
                    
                    String text="Lietotajs ar ID"+ID+" pievienoja Uzkrajuma kontu:"+Konta_numurs;
                    String queryy=ad.LOG(ID,text);
                    executeSQLQuery2(queryy);
                    temp=false;
               }else{
                    
            }
        }while(temp);
    }//GEN-LAST:event_jButton_Uzkrajuma_kontsActionPerformed

    private void Kredita_KontsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Kredita_KontsActionPerformed
        checks add=new checks();   
        Kredita_Uzkrajuma_Algas_ADD addd=new Kredita_Uzkrajuma_Algas_ADD();
        Admin ad=new Admin();
        SuperAdmin update=new SuperAdmin();
        String ID=jTextField_ID.getText();
        long a=1000000000000L;
        long b=10000000000000L;
        boolean temp=true;
        
        if(!add.checkField(Kredita_Summa.getText())){
             JOptionPane.showMessageDialog(null,"Ievadi summu blakus lauka");
        }else{
            try {
                int summa=(int) Double.parseDouble(Kredita_Summa.getText());
                String Konta_numurs2="LV70HABA8346511132976";
                String quer="Select *From `bankas_konts` WHERE Konta_numurs='"+Konta_numurs2+"'";
                con = DriverManager.getConnection("jdbc:mysql://localhost/Konti?serverTimezone=Europe/Riga&useSSL=false","root","");
                st=con.createStatement();
                rs = st.executeQuery(quer);
                if(rs.next()){
                    double su=rs.getInt("Balance");
                            if(summa>0 && rs.getInt("Balance")>summa ){
                                do{
                                    int first_number=1 + (int) (Math.random() * 100);
                                    long second_number= a + (long) (Math.random() * b);
                                    String Konta_numurs="LV"+first_number+"HABA"+second_number;
 
                                    String Konti_Uzkrajumi="konti.uzkrajuma";
                                    String Konti_Kredita="konti.kredita";
                                    String Konti_Algas="konti.algas";
                                    String Konti_Bankas_konts="konti.Bankas_konts";
                                    String check_name="Konta_numurs";
                                    
                                    if(!add.hasField(Konta_numurs,Konti_Uzkrajumi,check_name) &&  !add.hasField(Konta_numurs,Konti_Kredita,check_name) && !add.hasField(Konta_numurs,Konti_Algas,check_name) && !add.hasField(Konta_numurs,Konti_Bankas_konts,check_name)){
                                        String name = "konti.kredita";
                                        String konta_name="Kredita";
                                        String query=addd.Insert_Kont(konta_name,name,ID, Konta_numurs, summa);
                                        executeSQLQuery(query,"Inserted");
                                        
                                        String text="Lietotajs ar ID"+ID+" pievienoja kredita kontu:"+Konta_numurs;
                                        String queryy=ad.LOG(ID,text);
                                        executeSQLQuery2(queryy);
 
                                        con = DriverManager.getConnection("jdbc:mysql://localhost/Konti?serverTimezone=Europe/Riga&useSSL=false","root","");
                                        st=con.createStatement();
                                        rs = st.executeQuery(quer);
                                        if(rs.next()){
                                            double suu=rs.getInt("Balance")-summa;
                                            String nosaukums="Bankas_konts";      
                                            String queryyyy= update.Update_Konts(suu,Konta_numurs2,nosaukums);
                                            executeSQLQuery2(queryyyy);
                                        }   
                                    
                                        temp=false;
                                    }
                                    
                                }while(temp);
                            }else{
                                JOptionPane.showMessageDialog(null,"Nepietiek lidzeklju, ievadi citu summu");
                            }
                }   
            } catch (SQLException ex) {
                Logger.getLogger(Admin_panel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_Kredita_KontsActionPerformed

    private void jButton_ClearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_ClearMouseClicked
        jTextField_ID.setText("");
        jTextField_Vards.setText("");
        jTextField_Uzvards.setText("");
        jTextField_Epasts.setText("");
        jTextField_Parole.setText("");
        jTextField_oldPass.setText("");
    }//GEN-LAST:event_jButton_ClearMouseClicked

    private void jButton_ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ClearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton_ClearActionPerformed

    private void jTable_Display_UserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_Display_UserMouseClicked
        //Display Slected Row in  JtexteFields
        int i=jTable_Display_User.getSelectedRow();
        TableModel model=jTable_Display_User.getModel();
        jTextField_ID.setText(model.getValueAt(i,0).toString());
        jTextField_Vards.setText(model.getValueAt(i,1).toString());
        jTextField_Uzvards.setText(model.getValueAt(i,2).toString());
        jTextField_Epasts.setText(model.getValueAt(i,3).toString());
        jTextField_Parole.setText(model.getValueAt(i,4).toString());
        jTextField_oldPass.setText(model.getValueAt(i,4).toString());
    }//GEN-LAST:event_jTable_Display_UserMouseClicked

    private void KontiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KontiActionPerformed
        dispose();
        String temp=jTextField1.getText();
        int ID=Integer.parseInt(temp);
        
        String Admin=jTextField2.getText();
        Konti_Admin_Show_Frame  panel=new Konti_Admin_Show_Frame((int) ID,Admin);
        panel.setVisible(true);
    }//GEN-LAST:event_KontiActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String temp="SuperAdmin";
        if(temp.equals(jTextField2.getText())){
            String tempp=jTextField1.getText();
            int ID=Integer.parseInt(tempp);
            String Super_admin=jTextField2.getText();
            dispose();
            Super_Admin panell=new Super_Admin((int) ID,Super_admin);
            panell.setVisible(true);
        }else{
            dispose();
            LogIN panel=new LogIN();
            panel.setVisible(true);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dispose();
        String temp=jTextField1.getText();
        int ID=Integer.parseInt(temp);
        
        String Admin=jTextField2.getText();
        
        Vesture_Frame a= new Vesture_Frame(ID,Admin);
        
        a.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin_panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin_panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin_panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin_panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Admin_panel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Konti;
    private javax.swing.JButton Kredita_Konts;
    private javax.swing.JTextField Kredita_Summa;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton_Clear;
    private javax.swing.JButton jButton_Delete;
    private javax.swing.JButton jButton_Insert;
    private javax.swing.JButton jButton_Update;
    private javax.swing.JButton jButton_Uzkrajuma_konts;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_Display_User;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField_Epasts;
    private javax.swing.JTextField jTextField_ID;
    private javax.swing.JTextField jTextField_Parole;
    private javax.swing.JTextField jTextField_Uzvards;
    private javax.swing.JTextField jTextField_Vards;
    private javax.swing.JTextField jTextField_oldPass;
    // End of variables declaration//GEN-END:variables


}
